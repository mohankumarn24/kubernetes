--https://minikube.sigs.k8s.io/docs/start/?arch=%2Fwindows%2Fx86-64%2Fstable%2F.exe+download
-- java techie: https://www.youtube.com/playlist?list=PLVz2XdJiJQxybsyOxK7WFtteH42ayn5i9
-- https://medium.com/@javatechie/kubernetes-tutorial-setup-kubernetes-in-windows-run-spring-boot-application-on-k8s-cluster-c6cab8f7de5a

Minikube setup steps in windows OS:
----------------------------------
C:\Windows\system32>winget install Kubernetes.minikube
C:\Windows\system32>kubectl get node
C:\Windows\system32>minikube stop
C:\Windows\system32>minikube delete
C:\Windows\system32>minikube delete --all
C:\Windows\system32>minikube version

C:\Windows\system32>minikube start --driver=docker
C:\Windows\system32>minikube status
C:\Windows\system32>kubectl cluster-info


Deploy Spring boot application to Kubernetes cluster:
----------------------------------------------------
C:\Windows\system32>minikube docker-env
SET DOCKER_TLS_VERIFY=1
SET DOCKER_HOST=tcp://127.0.0.1:52206
SET DOCKER_CERT_PATH=C:\Users\Mohan\.minikube\certs
SET MINIKUBE_ACTIVE_DOCKERD=minikube
REM To point your shell to minikube's docker-daemon, run:
REM @FOR /f "tokens=*" %i IN ('minikube -p minikube docker-env --shell cmd') DO @%i

C:\Windows\system32>@FOR /f "tokens=*" %i IN ('minikube -p minikube docker-env --shell cmd') DO @%i

C:\Users\Mohan\Downloads\springboot-k8s-demo>docker build -t spring-boot-k8s-app:1.0 .
C:\Users\Mohan\Downloads\springboot-k8s-demo>docker images

C:\Users\Mohan\Downloads\springboot-k8s-demo>kubectl create deployment spring-boot-k8s --image=spring-boot-k8s-app:1.0 --port=8080
C:\Users\Mohan\Downloads\springboot-k8s-demo>kubectl get deployments
C:\Users\Mohan\Downloads\springboot-k8s-demo>kubectl describe deployment spring-boot-k8s
C:\Users\Mohan\Downloads\springboot-k8s-demo>kubectl get pods
NAME                              READY   STATUS    RESTARTS      AGE
spring-boot-k8s-56f6787c59-mfttv   1/1     Running   0             2m58s

C:\Users\Mohan\Downloads\springboot-k8s-demo>kubectl logs spring-boot-k8s-56f6787c59-mfttv

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.4.5)

2025-05-06T10:59:42.080Z  INFO 1 --- [springboot-k8s-demo] [           main] n.p.s.SpringbootK8sDemoApplication       : Starting SpringbootK8sDemoApplication v0.0.1-SNAPSHOT using Java 17.0.2 with PID 1 (/springboot-k8s-demo-0.0.1-SNAPSHOT.jar started by root in /)
2025-05-06T10:59:42.082Z  INFO 1 --- [springboot-k8s-demo] [           main] n.p.s.SpringbootK8sDemoApplication       : No active profile set, falling back to 1 default profile: "default"
2025-05-06T10:59:42.923Z  INFO 1 --- [springboot-k8s-demo] [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-05-06T10:59:42.939Z  INFO 1 --- [springboot-k8s-demo] [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-05-06T10:59:42.939Z  INFO 1 --- [springboot-k8s-demo] [           main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.40]
2025-05-06T10:59:43.009Z  INFO 1 --- [springboot-k8s-demo] [           main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-05-06T10:59:43.010Z  INFO 1 --- [springboot-k8s-demo] [           main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 893 ms
2025-05-06T10:59:43.512Z  INFO 1 --- [springboot-k8s-demo] [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-05-06T10:59:43.524Z  INFO 1 --- [springboot-k8s-demo] [           main] n.p.s.SpringbootK8sDemoApplication       : Started SpringbootK8sDemoApplication in 1.869 seconds (process running for 2.368)

C:\Users\Mohan\Downloads\springboot-k8s-demo>kubectl get deployments
NAME             READY   UP-TO-DATE   AVAILABLE   AGE
spring-boot-k8s   1/1     1            1           4m57s

C:\Users\Mohan\Downloads\springboot-k8s-demo>kubectl expose deployment spring-boot-k8s --type=NodePort
service/springboot-k8s exposed

C:\Users\Mohan\Downloads\springboot-k8s-demo>kubectl get service
NAME             TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)          AGE
hello-minikube   NodePort    10.109.90.176    <none>        8080:30344/TCP   75m
kubernetes       ClusterIP   10.96.0.1        <none>        443/TCP          78m
spring-boot-k8s   NodePort    10.104.103.125   <none>        8080:32045/TCP   25s

C:\Users\Mohan\Downloads\springboot-k8s-demo>minikube service spring-boot-k8s --url
http://127.0.0.1:52373
! Because you are using a Docker driver on windows, the terminal needs to be open to run it.

http://127.0.0.1:52373/api/users/hello
hello, world

C:\Users\Mohan\Downloads\springboot-k8s-demo>minikube dashboard
kubectl delete service spring-boot-k8s
kubectl delete deployment spring-boot-k8s
minikube stop
minikube delete
minikube delete --all
C:\Users\Mohan\Downloads\springboot-k8s-demo>minikube start


-----------------------------------------------------
YAML
-----------------------------------------------------
minikube start --driver=docker
minikube status
kubectl cluster-info
minikube docker-env

Deployment:
----------
docker build -t spring-boot-k8s-app-yaml:1.0 .
kubectl apply -f deployment.yaml													# create deployments and deploy the app
kubectl get deployments																# print deployments info
kubectl get pods																	# print pods info. Verify itâ€™s running
											                                         
kubectl apply -f service.yaml											             
kubectl get service																	# gives port number				
											                                         
kubectl get nodes -o wide															# gives ip address or use 'minikube ip'
minikube dashboard

Expose the Deployment:
---------------------
kubectl expose deployment spring-boot-k8s-yaml --type=NodePort --port=8080			# To access your Spring Boot app from your host system 
minikube service spring-boot-k8s-yaml --url											# get the URL Minikube assigns
http://192.168.49.2:32145															# output

